
##Reduce Phase: 

# Reduce0
# 0. Prepare
create or replace view g3 as select Graph.src as v4, Graph.dst as v6, v10 from Graph, (SELECT src, COUNT(*) AS v10 FROM Graph GROUP BY src) AS c2 where Graph.dst = c2.src;
create or replace view g3Aux23 as select v4, v6, v10 from g3;

# Reduce1
# 0. Prepare
create or replace view g1 as select Graph.src as v7, Graph.dst as v2, v8 from Graph, (SELECT src, COUNT(*) AS v8 FROM Graph GROUP BY src) AS c1 where Graph.src = c1.src;
# 2. minView
create or replace view minView851115094923118629 as select v2, min(v8) as mfL2419815510823173984 from g1 group by v2;
# 3. joinView
create or replace view joinView4760532047869809468 as select src as v2, dst as v4, mfL2419815510823173984 from Graph AS g2, minView851115094923118629 where g2.src=minView851115094923118629.v2;

# Reduce2
# 2. minView
create or replace view minView7172499091790419158 as select v4, min(mfL2419815510823173984) as mfL349011863660411565 from joinView4760532047869809468 group by v4;
# 3. joinView
create or replace view joinView3410753820974555151 as select v4, v6 from g3Aux23 join minView7172499091790419158 using(v4) where mfL349011863660411565<v10;
# Final result: 
select count(distinct v4, v6) from joinView3410753820974555151;

# drop view joinView3410753820974555151, minView7172499091790419158, joinView4760532047869809468, minView851115094923118629, g1, g3Aux23, g3;
