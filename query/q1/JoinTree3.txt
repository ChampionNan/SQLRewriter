jt.root:
AggregatedRelation[id=5][source=Graph][cols=(v6:IntDataType,v10:LongDataType)][group=(0)][func=COUNT]
edge:
JoinTreeEdge(TableScanRelation[id=1][source=Graph][cols=(v7:IntDataType,v2:IntDataType)]->AggregatedRelation[id=4][source=Graph][cols=(v7:IntDataType,v8:LongDataType)][group=(0)][func=COUNT])
JoinTreeEdge(TableScanRelation[id=2][source=Graph][cols=(v2:IntDataType,v4:IntDataType)]->TableScanRelation[id=1][source=Graph][cols=(v7:IntDataType,v2:IntDataType)])
JoinTreeEdge(TableScanRelation[id=3][source=Graph][cols=(v4:IntDataType,v6:IntDataType)]->TableScanRelation[id=2][source=Graph][cols=(v2:IntDataType,v4:IntDataType)])
JoinTreeEdge(AggregatedRelation[id=5][source=Graph][cols=(v6:IntDataType,v10:LongDataType)][group=(0)][func=COUNT]->TableScanRelation[id=3][source=Graph][cols=(v4:IntDataType,v6:IntDataType)])
relation in subset:
AggregatedRelation[id=5][source=Graph][cols=(v6:IntDataType,v10:LongDataType)][group=(0)][func=COUNT]
TableScanRelation[id=1][source=Graph][cols=(v7:IntDataType,v2:IntDataType)]
TableScanRelation[id=2][source=Graph][cols=(v2:IntDataType,v4:IntDataType)]
TableScanRelation[id=3][source=Graph][cols=(v4:IntDataType,v6:IntDataType)]
AggregatedRelation[id=4][source=Graph][cols=(v7:IntDataType,v8:LongDataType)][group=(0)][func=COUNT]
comparison hypergraph edge:
Comparison[id=3][op=longLessThan][left=SingleVariableExpression(v8:LongDataType)][right=SingleVariableExpression(v10:LongDataType)][path=1<->4,2<->1,3<->2,5<->3]
